name: FFI Playground

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-22.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Checkout latest llama.cpp release
        id: llama
        run: |
          git clone https://github.com/ggerganov/llama.cpp.git
          cd llama.cpp
          RELEASE=`git describe --tags --abbrev=0`
          git checkout $RELEASE
          echo "version=$RELEASE" >> "$GITHUB_OUTPUT"

      # The build b4138 does not contain the so files later this can be skipped and the output just been downloaded.
      - name: Build llama for the unit test
        working-directory: llama.cpp
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libcurl4-openssl-dev
          mkdir build
          cd build
          git checkout b4138
          cmake .. \
            -DLLAMA_FATAL_WARNINGS=ON \
            -DLLAMA_CURL=ON \
            -DGGML_RPC=ON \
            -DBUILD_SHARED_LIBS=ON \
            -DLLAMA_NATIVE=ON
          cmake --build . --config Release -j $(nproc)
          cp src/libllama.so ../..

      - name: Download test dependencies
        run: |
          wget -nv https://huggingface.co/mradermacher/Oolel-Small-v0.1-GGUF/resolve/main/Oolel-Small-v0.1.Q4_K_S.gguf
          #wget -nv https://github.com/ggerganov/llama.cpp/releases/download/$version/llama-$version-bin-ubuntu-x64.zip
          #unzip llama-$version-bin-ubuntu-x64.zip
          #rm llama-$version-bin-ubuntu-x64.zip
          #ls -la llama.cpp/build/bin/
          #mv llama.cpp/build/bin/*.so .

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.27.2

      - name: run tests
        run: LD_LIBRARY_PATH="$LD_LIBRARY_PATH:llama.cpp/build/bin" flutter test

      - name: Check for pending rollouts...
        id: release
        env:
          version: ${{ steps.llama.outputs.version }}
        run: |
          if git ls-remote --heads origin | grep -q "rollout/$version"; then
            echo "pending=TRUE" >> "$GITHUB_OUTPUT"
          else
            echo "pending=FALSE" >> "$GITHUB_OUTPUT"
          fi

      - name: Install LLVM and Clang
        if: ${{ steps.release.outputs.pending == 'FALSE' }}
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "10.0"

      - name: run ffigen
        if: ${{ steps.release.outputs.pending == 'FALSE' }}
        id: ffigen
        env:
          version: ${{ steps.llama.outputs.version }}
        run: |
          echo -e "preamble: |\n  // AUTO GENERATED FILE by CI for release $version\n  // In order to run this locally checkout llama.cpp in this repository's root folder and run:\n  // dart run ffigen --config .github/ffigen.yaml" >> .github/ffigen.yaml
          cd llama.cpp
          git checkout $version
          cd ..
          dart run ffigen --config .github/ffigen.yaml
          git reset .github/ffigen.yaml
          if [[ -z "$(git status --porcelain)" ]]; then
            echo 'No changes detected.'
            echo 'diff=FALSE' >> "$GITHUB_OUTPUT"
          else
            echo 'diff=TRUE' >> "$GITHUB_OUTPUT"
          fi

      - name: Rollout changes
        if: ${{ steps.ffigen.outputs.diff == 'TRUE' }}
        env:
          version: ${{ steps.llama.outputs.version }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add lib/src/llama_cpp.dart
          git checkout -b "rollout/$version"
          git commit -m "Rollout changes of llama release $version"
          git push origin "rollout/$version"
